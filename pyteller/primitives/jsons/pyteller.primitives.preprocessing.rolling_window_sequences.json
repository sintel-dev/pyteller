{
    "name": "pyteller.primitives.preprocessing.rolling_window_sequences",
    "contributors": [
        "Carles Sala <csala@csail.mit.edu>",
        "Alexander Geiger <geigera@mit.edu>",
        "Skylar Eiskowitz  <eiskowit@.mit.edu>"
    ],
    "description": "Create rolling window sequences out of timeseries data.",
    "classifiers": {
        "type": "preprocessor",
        "subtype": "feature_extractor"
    },
    "modalities": [
        "timeseries"
    ],
    "primitive": "pyteller.primitives.preprocessing.rolling_window_sequences",
    "produce": {
        "args": [
            {
                "name": "X",
                "type": "ndarray"
            },
            {
                "name": "index",
                "type": "ndarray"
            },
            {
                "name": "target_column",
                "type": "str or int"
            },

            {
                "name": "drop",
                "type": "ndarray or None or str or int or float or bool",
                "required": false
            }
        ],
        "output": [
            {
                "name": "X",
                "type": "ndarray"
            },
            {
                "name": "y",
                "type": "ndarray"
            },
            {
                "name": "index",
                "type": "ndarray"
            },
            {
                "name": "target_index",
                "type": "ndarray"
            }
        ]
    },
    "hyperparameters": {
        "fixed": {
            "window_size": {
                "type": "int",
                "default": 250
            },
            "target_size": {
                "type": "int",
                "default": 1
            },
            "step_size": {
                "type": "int",
                "default": 1
            },
            "offset": {
                "type": "int",
                "default": 0
            },
            "drop_windows": {
                "type": "bool",
                "default": false
            }
        }
    }
}
