
{
    "primitives": [
        "pyteller.primitives.preprocessing.get_index",
        "sklearn.impute.SimpleImputer",
        "mlprimitives.custom.preprocessing.Rangescaler",
        "pyteller.primitives.preprocessing.rolling_window_sequences",
        "numpy.squeeze",
        "keras.Sequential.LSTMTimeSeriesRegressor",
        "mlprimitives.custom.preprocessing.RangeUnscaler",
        "pyteller.primitives.postprocessing.flatten"

    ],

"init_params": {

        "pyteller.primitives.preprocessing.rolling_window_sequences#1": {
            "target_column": 0,
            "window_size": 18,
            "step_size": 3
        },
        "keras.Sequential.LSTMTimeSeriesRegressor#1": {
            "epochs": 1,
            "verbose": 1

        }
    },
    "input_names": {
        "mlprimitives.custom.preprocessing.RangeUnscaler#1": {
            "X": "y_hat"
        },
        "numpy.squeeze#1": {
            "X": "y"
        },
        "pyteller.primitives.postprocessing.flatten#1": {
            "X": "y_hat",
            "index": "target_index",
            "columns": "entities"
        }
    },

    "output_names": {
        "numpy.squeeze#1": {
            "X": "y"
        },
        "keras.Sequential.LSTMTimeSeriesRegressor#1": {
            "y": "y_hat"
        },

        "mlprimitives.custom.preprocessing.RangeUnscaler#1": {
            "X": "y_hat"
        },

         "pyteller.primitives.postprocessing.flatten#1": {
           "X": "y_hat"
        }
    },
    "outputs": {
    "default": [

        {
            "name": "y_hat",
            "variable": "pyteller.primitives.postprocessing.flatten#1.y_hat"
        }

    ]
},
    "pipeline_arguments": {
        "pred_length": {
            "keras.Sequential.LSTMTimeSeriesRegressor#1": "dense_units",
            "pyteller.primitives.preprocessing.rolling_window_sequences#1": "target_size",
            "pyteller.primitives.postprocessing.flatten#1": "pred_length"

        },
        "offset": {
            "pyteller.primitives.preprocessing.rolling_window_sequences#1": "offset"
        },
        "target_column": {
            "pyteller.primitives.preprocessing.rolling_window_sequences#1": "target_column"
        }
    }
}
